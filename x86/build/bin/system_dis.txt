
build/bin/system.elf:     file format elf32-i386
build/bin/system.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00007c1b

Program Header:
    LOAD off    0x00000000 vaddr 0x00007000 paddr 0x00007000 align 2**12
         filesz 0x00000e57 memsz 0x00000e57 flags r-x
    LOAD off    0x00001000 vaddr 0x00009000 paddr 0x00009000 align 2**12
         filesz 0x00004000 memsz 0x00004000 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000257  00007c00  00007c00  00000c00  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00004000  00009000  00009000  00001000  2**12
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000012  00000000  00000000  00005000  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 os.c
0000b000 l     O .data	00001000 page_table
00000000 l    df *ABS*	00000000 boot.o
00007c20 l       .text	00000000 offest
00007c33 l       .text	00000000 boot_load
00007e51 l       .text	00000000 gdt_desc
00007c54 l       .text	00000000 boot_sig
00009000 g     O .data	00000800 gdt_table
00007e1b g       .text	00000000 protected_mode_start
0000c000 g     O .data	00001000 map_phy_buffer
00007c00 g     F .text	0000001b _os_init
00007c1b g       .text	00000000 _start
0000d000 g       .data	00000000 __bss_start
0000a000 g     O .data	00001000 pg_dir
0000d000 g       .data	00000000 _edata
0000d000 g       .data	00000000 _end



Disassembly of section .text:

00007c00 <_os_init>:
    7c00:	b8 00 b0 00 00       	mov    $0xb000,%eax
    7c05:	83 c8 07             	or     $0x7,%eax
    7c08:	a3 00 a8 00 00       	mov    %eax,0xa800
    7c0d:	b8 00 c0 00 00       	mov    $0xc000,%eax
    7c12:	83 c8 07             	or     $0x7,%eax
    7c15:	a3 00 a0 00 00       	mov    %eax,0xa000
    7c1a:	c3                   	ret    

00007c1b <_start>:
    7c1b:	ea                   	.byte 0xea
    7c1c:	20 7c 00 00          	and    %bh,0x0(%eax,%eax,1)

00007c20 <offest>:
    7c20:	b8 00 00 8e d8       	mov    $0xd88e0000,%eax
    7c25:	8e d0                	mov    %eax,%ss
    7c27:	8e c0                	mov    %eax,%es
    7c29:	8e e0                	mov    %eax,%fs
    7c2b:	8e e8                	mov    %eax,%gs
    7c2d:	66 bc 1b 7c          	mov    $0x7c1b,%sp
	...

00007c33 <boot_load>:
    7c33:	bb 1b 7e b9 02       	mov    $0x2b97e1b,%ebx
    7c38:	00 b8 40 02 cd 13    	add    %bh,0x13cd0240(%eax)
    7c3e:	72 f3                	jb     7c33 <boot_load>
    7c40:	fa                   	cli    
    7c41:	0f 01 16             	lgdtl  (%esi)
    7c44:	51                   	push   %ecx
    7c45:	7e 66                	jle    7cad <boot_sig+0x59>
    7c47:	b8 01 00 00 00       	mov    $0x1,%eax
    7c4c:	0f 01 f0             	lmsw   %ax
    7c4f:	ea                   	.byte 0xea
    7c50:	1b 7e 08             	sbb    0x8(%esi),%edi
	...

00007c54 <boot_sig>:
	...
    7e18:	00 55 aa             	add    %dl,-0x56(%ebp)

00007e1b <protected_mode_start>:
    7e1b:	66 b8 10 00          	mov    $0x10,%ax
    7e1f:	8e d8                	mov    %eax,%ds
    7e21:	8e d0                	mov    %eax,%ss
    7e23:	8e c0                	mov    %eax,%es
    7e25:	8e e0                	mov    %eax,%fs
    7e27:	8e e8                	mov    %eax,%gs
    7e29:	bc 1b 7c 00 00       	mov    $0x7c1b,%esp
    7e2e:	e8 cd fd ff ff       	call   7c00 <_os_init>
    7e33:	b8 00 a0 00 00       	mov    $0xa000,%eax
    7e38:	0f 22 d8             	mov    %eax,%cr3
    7e3b:	0f 20 e0             	mov    %cr4,%eax
    7e3e:	83 c8 10             	or     $0x10,%eax
    7e41:	0f 22 e0             	mov    %eax,%cr4
    7e44:	0f 20 c0             	mov    %cr0,%eax
    7e47:	0d 00 00 00 80       	or     $0x80000000,%eax
    7e4c:	0f 22 c0             	mov    %eax,%cr0
    7e4f:	eb fe                	jmp    7e4f <protected_mode_start+0x34>

00007e51 <gdt_desc>:
    7e51:	ff 07                	incl   (%edi)
    7e53:	00                   	.byte 0x0
    7e54:	90                   	nop
	...
